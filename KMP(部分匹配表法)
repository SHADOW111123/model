#include <iostream>
#include<string>
#include <vector>
using namespace std;
int count = 0;

void notpercatch(string a,int length,int *lps)//部分匹配表;
{
	lps[0] = 0;
	for (int i = 1; i < length; i++)
	{
		int index =lps[i-1];


			while (a[i] != a[index]&&index!=0)
			{

				index = lps[index-1];
			}
			if (index != 0)
			{
				lps[i] = index + 1;
			}

			else
			{
				if (a[index] == a[i])
				{
					lps[i] = 1;
				}

				else
				{
					lps[i] = 0;
				}

			}
		
	}


}
void catchst(int* lps, string master, string model)//匹配过程
{
	int i = 0; int j = 0;

	while (i < master.length())
	{

		if (master[i] == model[j]&&j<model.length())
		{
			i++;
			j++;

		}
		else
		{
			if (j != 0)
			{
				j = lps[j - 1];
			}
			else
			{

				if (master[i] != model[j])
				{
					i++;
				}

			}

		}

		if (j == model.length())
		{
			cout << i - model.length() + 1 << endl;
			j = lps[j-1];
		}

	}

}


int main()
{
	string s1, s2;
	cin >> s1 >> s2;
	int len = s2.length();
	int* lps = new int[len];

	//int* maxn = new int[len];


	notpercatch(s2, s2.length(), lps);

	catchst(lps, s1, s2);


	for (int i = 0; i < len; i++)
	{
		cout << lps[i] << " ";
	}


}
