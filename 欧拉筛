#include <iostream>
#include <vector>
using namespace std;

int n; // 全局变量，供 oulashai 使用

void oulashai(vector<int>& prime, vector<int>& isprime, vector<int>& spf)
{
    for (int i = 2; i <= n; i++)
    {
        if (isprime[i])
        {
            prime.push_back(i);  // i 是质数
            spf[i] = i;          // 最小质因子是它自己
        }

        for (int j = 0; j < prime.size(); j++)
        {
            int p = prime[j];

            if (i * p > n) break;

            isprime[i * p] = 0;      // i * p 是合数
            spf[i * p] = p;          // p 是 i * p 的最小质因子

            if (i % p == 0)
            {
                // 如果 p 是 i 的最小质因子，说明 i 后面乘更大的质数将会重复处理
                break;
            }
        }
    }
}

int main()
{
    cout << "请输入一个整数 n：";
    cin >> n;

    vector<int> prime;                 // 存储质数
    vector<int> isprime(n + 1, 1);     // isprime[i] = 1 表示 i 是质数
    vector<int> spf(n + 1, 0);         // spf[i] = i 的最小质因子，初始化为 0

    oulashai(prime, isprime, spf);

    cout << "不超过 " << n << " 的质数有：" << endl;
    for (int p : prime)
        cout << p << " ";
    cout << endl;

    cout << "\n每个数的最小质因子（spf）如下：" << endl;
    for (int i = 2; i <= n; i++)
    {
        cout << "spf[" << i << "] = " << spf[i] << endl;
    }

    return 0;
}
