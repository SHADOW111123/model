#include <iostream>
#include <vector>
using namespace std;
const int MAXN = 1000005; // 预处理最大范围
vector<int> prime;
vector<int> isprime(MAXN + 1, 1);
vector<int> spf(MAXN + 1, 0);
vector<int> judge(MAXN + 1, 0);
void oulashai(int n) {
    isprime[0] = isprime[1] = 0;
    for (int i = 2; i <= n; i++) {
        if (isprime[i]) {
            prime.push_back(i);
            spf[i] = i;
            judge[i] = 1; // 质因子个数为奇数
        }
        for (int j = 0; j < (int)prime.size(); j++) {
            int p = prime[j];
            if (i * p > n) break;
            isprime[i * p] = 0;
            spf[i * p] = p;
            judge[i * p] = judge[i] ^ 1; // 奇偶翻转
            if (i % p == 0) break;
        }
    }
}
void factorize(int x)//分解质因数函数;
{
    cout << x << " = ";
    bool first = true;
    while (x > 1)
    {
        int p = spf[x], cnt = 0;
        while (x % p == 0) x /= p, cnt++;
        if (!first) cout << " * ";
        cout << p << "^" << cnt;
        first = false;
    }
    cout << endl;
} 

int main() {
    // 预处理一次，之后所有输入都用预处理数据
    oulashai(MAXN);

    int t; cin >> t;
    while (t--) {
        int n; cin >> n;
        int cnt = 0;
        for (int i = 2; i <= n; i++) {
            if (cnt == n / 2) break;
            if (judge[i]) {
                cout << i << " ";
                cnt++;
            }
        }
        cout << "\n";
    }
    return 0;
}

